[huey_fast]
max_workers = 8  # 减少worker数量以避免超过API限制
sqlite_path = "data/tasks_fast.db"

[huey_slow]
max_workers = 1   # 为慢速队列分配少量worker
sqlite_path = "data/tasks_slow.db"

[huey_maint]
max_workers = 1
sqlite_path = "data/tasks_maint.db"

[storage]
parquet_base_path = "data/parquet"

[database]
type = "duckdb"
path = "data/stock.db" # 旧的、包含物理数据的主数据库
metadata_path = "data/metadata.db" # 新的、仅含元数据的数据库
schema_file_path = "stock_schema.toml" # 相对于项目根目录

[data_processor]
batch_size = 1000
flush_interval_seconds = 30

[cron_tasks]
sync_metadata_schedule = "*/10 * * * *" # 每10分钟执行一次

[download_tasks]
default_start_date = "19900101"

# 注意：这里的键名必须与 TaskTemplateRegistry 中的 api_method 匹配
[download_tasks.stock_basic]  # api_method: stock_basic
rate_limit_per_minute = 195  # 基础数据访问频率较低

[download_tasks.daily]  # api_method: daily (对应 stock_daily 任务)
rate_limit_per_minute = 400  # 保守设置，为8个worker留出安全边界

[download_tasks.pro_bar]  # api_method: pro_bar (对应 stock_adj_qfq 任务)
rate_limit_per_minute = 195  # 复权数据访问频率较高

[download_tasks.daily_basic]  # api_method: daily_basic
rate_limit_per_minute = 195  # 每日基本面数据访问频率较高

[download_tasks.balancesheet]  # api_method: balancesheet (对应 balance_sheet 任务)
rate_limit_per_minute = 195  # 财务数据访问频率中等

[download_tasks.income]  # api_method: income (对应 income_statement 任务)
rate_limit_per_minute = 195  # 财务数据访问频率中等

[download_tasks.cashflow]  # api_method: cashflow (对应 cash_flow 任务)
rate_limit_per_minute = 195  # 财务数据访问频率中等

[task_groups]
sys=[
    "stock_basic"
]
daily = [
    "stock_daily",
    "daily_basic",
]
financial=[
    "balance_sheet",
    "income_statement",
    "cash_flow",
]
test=[
    "daily_basic"
]
