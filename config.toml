[huey_fast]
max_workers = 50  # 为快速队列分配更多worker
sqlite_path = "data/tasks_fast.db"

[huey_slow]
max_workers = 1   # 为慢速队列分配少量worker
sqlite_path = "data/tasks_slow.db"

[huey_maint]
max_workers = 1
sqlite_path = "data/tasks_maint.db"

[storage]
parquet_base_path = "data/parquet"

[database]
type = "duckdb"
path = "data/stock.db" # 旧的、包含物理数据的主数据库
metadata_path = "data/metadata.db" # 新的、仅含元数据的数据库
schema_file_path = "stock_schema.toml" # 相对于项目根目录

[data_processor]
batch_size = 1000
flush_interval_seconds = 30

[cron_tasks]
sync_metadata_schedule = "*/10 * * * *" # 每10分钟执行一次

[download_tasks]
[download_tasks.stock_basic]
rate_limit_per_minute = 195  # 基础数据访问频率较低
# update_interval_hours = 24*7
[download_tasks.stock_daily]

rate_limit_per_minute = 195  # 日线数据访问频率较高
[download_tasks.stock_adj_qfq]

rate_limit_per_minute = 195  # 复权数据访问频率较高
[download_tasks.daily_basic]
rate_limit_per_minute = 195  # 每日基本面数据访问频率较高
[download_tasks.balance_sheet]

rate_limit_per_minute = 195  # 财务数据访问频率中等
[download_tasks.income_statement]

rate_limit_per_minute = 195  # 财务数据访问频率中等
[download_tasks.cash_flow]

rate_limit_per_minute = 195  # 财务数据访问频率中等

[task_groups]
sys=[
    "stock_basic"
]
all = [
    "stock_daily",
    "stock_adj_qfq",
    "daily_basic",
    "balance_sheet",
    "income_statement",
    "cash_flow",
]
financial=[
    "balance_sheet",
    "income_statement",
    "cash_flow",
]
test=[
    "daily_basic"
]
