# ==========================================================
# 构建系统配置
# 这部分告诉打包工具（如pip, uv）如何构建这个项目。
# 这是让 entry_points 生效所必需的。
# ==========================================================
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"} # 告诉setuptools，包的根目录在'src'下

# ==========================================================
# 项目元数据 (由 uv 管理)
# ==========================================================
[project]
name = "stock-downloader"
version = "1.5.0"
description = "一个基于Tushare Pro的、可插拔的个人量化数据下载器。"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "duckdb>=1.3.2",
    "graphviz>=0.21",
    "pandas>=2.3.1",
    "pipdeptree>=2.28.0",
    "plotly>=6.2.0",
    "ratelimit>=2.2.1",
    "python-dotenv>=1.1.1",
    "pyyaml>=6.0.2",
    "tabulate>=0.9.0",
    "tqdm>=4.67.1",
    "tushare>=1.4.21",
    "typer>=0.12.3",
]

[project.scripts]
dl = "downloader.main:app"

# 开发环境依赖 (uv run pytest 时会用到)
[project.optional-dependencies]
dev = [
    "ipykernel>=6.30.0",
    "ipywidgets>=8.1.7",
    "nbformat>=5.10.4",
    "itables>=2.4.4",
    "ruff>=0.12.0",
]



# ==========================================================
# 插件系统入口点 (核心新增部分)
# 这里是我们“注册”所有任务处理器的地方。
# DownloadEngine 会自动发现并加载这里定义的所有插件。
# ==========================================================
[project.entry-points."stock_downloader.task_handlers"]
# 格式为: "任务类型标识符" = "模块路径:处理器类名"
daily = "downloader.tasks.daily:DailyTaskHandler"
stock_list = "downloader.tasks.stock_list:StockListTaskHandler"
daily_basic = "downloader.tasks.daily_basic:DailyBasicTaskHandler"
financials = "downloader.tasks.financials:FinancialsTaskHandler"

# ==========================================================
# Ruff configuration
# ==========================================================
[tool.ruff]
ignore = ["E501"]
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Allow E402 (module level import not at top of file) for notebooks
# since initialization code may need to run before imports
[tool.ruff.lint.per-file-ignores]
"*.ipynb" = ["E402"]

# ==========================================================
# Coverage configuration
# ==========================================================
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

# ==========================================================
# MyPy configuration
# ==========================================================
[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "tushare.*",
    "duckdb.*",
    "plotly.*",
    "tabulate.*",
    "pyrate_limiter.*",
]
ignore_missing_imports = true

[dependency-groups]
dev = [
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.12.7",
    "pytest>=8.4.1",
    "mypy>=1.11.0",
    "types-pyyaml>=6.0.12.20250516",
]
